@import '../../variables/global.css';
@import '../Header/Header.css';

.Hero,
.Hero-container {
  position: relative;
}

.Hero {
  color: var(--white);
  background-color: var(--limedSpruce);
  z-index: 1;
  margin-top: calc(var(--headerHeight) * -1); /* one can't have a negative CSS custom property, so this works. Credit to: https://github.com/css-modules/postcss-icss-values/issues/64#issuecomment-241285628 */
}

.Hero-container {
  z-index: 3;
}

.Hero-title.Hero-title { /* specificity waaaars */
  font-weight: 400;
  margin-bottom: var(--spacingLG);
}

.Hero-overlay,
.Hero-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.Hero-overlay {
  z-index: 2;
  background-color: var(--limedSpruce);
  opacity: 0.75;
}

.Hero-image {
  z-index: 1;
  object-fit: cover;
}

.Hero-links {
  display: flex;
  justify-content: space-around;
}

.Hero-iconUnderlay {
  position: absolute;
  z-index: 4;
  top: -25%;
  left: -25%;
  background-color: var(--deepCerulean);
  width: 150%;
  height: 150%;
  border-radius: 1.5rem;
  box-shadow: 0 var(--spacingMD) var(--spacingMD) calc(var(--spacingMD) * -1) rgba(0, 0, 0, 0.2);
  transform: scale(0);
  visibility: hidden;
  opacity: 0;
  transition: transform var(--duration) var(--easing),
              visibility var(--duration) var(--easing),
              opacity var(--duration) var(--easing),
              border-radius calc(var(--duration) * 2) var(--easing);
}

.Hero-iconLink {
  position: relative; /* allows absolute positioning within */
  color: currentColor;
  line-height: 0;
}

.Hero-iconLink:focus .Hero-iconUnderlay,
.Hero-iconLink:hover .Hero-iconUnderlay{
  transform: scale(1);
  border-radius: 50%;
  opacity: 1;
  visibility: visible;
}

.Hero-icon {
  position: relative; /* allows use of z-index */
  z-index: 5;
}

@media (min-width: 800px) {
  .Hero {
    display: flex;
    align-items: center;
    justify-content: center;
  }
}